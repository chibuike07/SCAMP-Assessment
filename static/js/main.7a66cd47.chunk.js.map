{"version":3,"sources":["components/component_Form_Field/form.module.css","components/component_section/section.module.css","components/component_header/Header.module.css","components/component_rank/rating.module.css","components/component_rank/rank.module.css","components/component_button/Button.module.css","components/component_navlinks/NavLink.jsx","components/component_header/Header.jsx","components/component_input/Input.jsx","components/component_button/Button.jsx","components/component_Form_Field/form.jsx","components/component_rank/rating.jsx","components/component_rank/Rank.jsx","components/component_section/Section.jsx","pages/landing_page.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavLinks","url","width","height","text","className","textDecoration","color","textTransform","border","borderRadius","padding","backgroundColor","margin","to","style","Header","header","Styles","fig","nav","Input","name","list","onChange","placeholder","value","isRequired","type","outLine","id","paddingLeft","borderTop","borderBottom","opacity","isRefs","autoComplete","autoCorrect","spellCheck","readOnly","onInput","onFocus","click","outline","required","ref","onClick","button","Button_Styles","Button","handleSubmit","onSubmit","FormField","data","handleCountries","countries","reset","handleGlobalSummary","form_wrapper","form","input","map","index","key","Slug","Rating","handleRatingClick","newRating","starNum","useState","rating","setRating","hover","setHover","rating_wrapper","radio_input","Array","n","i","ratingValue","icon","faStar","onMouseEnter","onMouseLeave","marginRight","spin","Rank","rank_wrapper","fieldset","Section","state","options","colors","chart","foreColor","zoom","enabled","xaxis","categories","show","yaxis","showAlways","labels","fill","dataLabels","markers","title","align","fontSize","series","global","globalTitle","handleFormData","target","setState","updateChart","randomType","newSeries","foundSlug","filter","countryObject","Object","keys","includes","push","types","Math","floor","random","length","ApexCharts","exec","toUpperCase","handleFocus","values","fetchData","a","arr","axios","get","then","res","Global","Countries","catch","err","console","log","response","this","prevProp","prevState","wrapper","formfield","starRank","substr","slice","React","Component","Landing_page","App","path","component","LandingPage","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7a66cd47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_wrapper\":\"form_form_wrapper__miZYj\",\"form\":\"form_form__377Pu\",\"fadein\":\"form_fadein__2EvB6\",\"input\":\"form_input__23pls\",\"button\":\"form_button__3ehQC\",\"button_fadein\":\"form_button_fadein__2hMeF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"section_wrapper__2ujlz\",\"display\":\"section_display__32xKM\",\"formfield\":\"section_formfield__1pJeb\",\"chart\":\"section_chart__20g9C\",\"starRank\":\"section_starRank__ZAjBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__-acq_\",\"nav\":\"Header_nav__3mlcT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio_input\":\"rating_radio_input__1_7qQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rank_wrapper\":\"rank_rank_wrapper__1knMT\",\"fadein\":\"rank_fadein__3pWx1\",\"fieldset\":\"rank_fieldset__3tgdZ\",\"move\":\"rank_move__23nfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__34dSP\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nconst NavLinks = ({\n  url,\n  width,\n  height,\n  text,\n  className,\n  textDecoration,\n  color,\n  textTransform,\n  border,\n  borderRadius,\n  padding,\n  backgroundColor,\n  margin,\n}) => (\n  <NavLink\n    to={url}\n    className={className}\n    style={{\n      textDecoration: textDecoration ? textDecoration : \"none\",\n      color: color ? color : \"#fff\",\n      textTransform: textTransform ? textTransform : null,\n      borderRadius: borderRadius ? borderRadius : null,\n      padding: padding ? padding : null,\n      backgroundColor: backgroundColor ? backgroundColor : null,\n      border: border ? border : null,\n      width: width ? width : null,\n      height: height ? height : null,\n      margin: margin ? margin : null,\n    }}\n  >\n    {text ? text : \"am here to navigate\"}\n  </NavLink>\n);\n\nexport default NavLinks;\n","import React from \"react\";\nimport CustomNavLinks from \"../component_navlinks/NavLink\";\nimport Styles from \"./Header.module.css\";\nconst Header = () => {\n  const { header, fig, nav } = Styles;\n  return (\n    <header className={header}>\n      <figure className={fig}></figure>\n      <nav className={nav}>\n        <CustomNavLinks text={\"home\"} url={\"/\"} />\n        <CustomNavLinks text={\"country\"} url={\"/\"} />\n        <CustomNavLinks text={\"statistic\"} url={\"/\"} />\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Input = ({\n  name,\n  list,\n  onChange,\n  placeholder,\n  value,\n  isRequired,\n  type,\n  className,\n  outLine,\n  id,\n  paddingLeft,\n  border,\n  borderRadius,\n  width,\n  height,\n  borderTop,\n  borderBottom,\n  backgroundColor,\n  color,\n  opacity,\n  isRefs,\n  autoComplete,\n  autoCorrect,\n  spellCheck,\n  readOnly,\n  onInput,\n  onFocus,\n  click,\n}) => {\n  return (\n    <input\n      style={{\n        outline: outLine ? outLine : \"none\",\n        paddingLeft: paddingLeft ? paddingLeft : null,\n        width: width ? width : null,\n        border: border ? border : null,\n        borderRadius: borderRadius ? borderRadius : null,\n        borderTop: borderTop ? borderTop : null,\n        borderBottom: borderBottom ? borderBottom : null,\n        height: height ? height : null,\n        color: color ? color : null,\n        backgroundColor: backgroundColor ? backgroundColor : null,\n        opacity: opacity ? opacity : null,\n      }}\n      type={type ? type : \"text\"}\n      list={list ? list : null}\n      placeholder={placeholder ? placeholder : null}\n      onChange={onChange}\n      value={value ? value : \"\"}\n      className={className ? className : \"custom-input\"}\n      name={name}\n      required={isRequired ? isRequired : null}\n      id={id ? id : null}\n      ref={isRefs ? isRefs : null}\n      autoComplete={autoComplete ? autoComplete : null}\n      autoCorrect={autoCorrect ? autoCorrect : null}\n      spellCheck={spellCheck ? spellCheck : null}\n      readOnly={readOnly ? readOnly : null}\n      onInput={onInput ? onInput : null}\n      onFocus={onFocus ? onFocus : null}\n      onClick={click ? click : null}\n    />\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport Button_Styles from \"./Button.module.css\";\n\nconst { button } = Button_Styles;\nconst Button = ({\n  name,\n  color,\n  backgroundColor,\n  click,\n  text,\n  handleSubmit,\n  className,\n  width,\n  outline,\n  margin,\n  padding,\n  border,\n  borderRadius,\n  ref,\n}) => (\n  <div className=\"button\">\n    <button\n      style={{\n        backgroundColor: backgroundColor ? backgroundColor : \"red\",\n        color: color ? color : \"#fff\",\n        width: width ? width : null,\n        outline: outline ? outline : null,\n        margin: margin ? margin : null,\n        padding: padding ? padding : null,\n        border: border ? border : null,\n        borderRadius: borderRadius ? borderRadius : null,\n      }}\n      onClick={click ? click : null}\n      name={name ? name : null}\n      onSubmit={handleSubmit ? handleSubmit : null}\n      className={className ? className : button}\n      ref={ref ? ref : null}\n    >\n      {text ? text : \"click\"}\n    </button>\n  </div>\n);\n\nexport default Button;\n","import React from \"react\";\nimport CustomInput from \"../component_input/Input\";\nimport CustomButton from \"../component_button/Button\";\nimport Styles from \"./form.module.css\";\nconst FormField = ({\n  data,\n  handleCountries,\n  countries,\n  reset,\n  handleGlobalSummary,\n}) => {\n  const { form_wrapper, form, input, button } = Styles;\n  return (\n    <div className={form_wrapper}>\n      <form className={form}>\n        <CustomInput\n          type={\"text\"}\n          name={\"country\"}\n          list=\"country\"\n          value={data}\n          onFocus={reset}\n          onChange={handleCountries}\n          className={input}\n          placeholder={\"select country\"}\n        />\n        <datalist className=\"datalist\" id=\"country\">\n          {countries &&\n            countries.map((countries, index) => (\n              <option key={index}>{countries.Slug}</option>\n            ))}\n        </datalist>\n      </form>\n\n      <CustomButton\n        text={\"Global Daily summary\"}\n        click={handleGlobalSummary}\n        className={button}\n        backgroundColor={\"rgb(107, 24, 16)\"}\n      />\n    </div>\n  );\n};\n\nexport default FormField;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomInput from \"../component_input/Input\";\nimport Styles from \"./rating.module.css\";\n\nconst Rating = ({ data, handleRatingClick, newRating, starNum }) => {\n  const [rating, setRating] = useState(null);\n  const [hover, setHover] = useState(null);\n  const { rating_wrapper, radio_input } = Styles;\n  return (\n    <div className={rating_wrapper}>\n      {[...Array(5)].map((n, i) => {\n        const ratingValue = i + 1;\n        return (\n          <label key={i}>\n            <CustomInput\n              type={\"radio\"}\n              name=\"rating\"\n              value={ratingValue}\n              click={() => setRating(ratingValue)}\n              className={radio_input}\n            />\n            <FontAwesomeIcon\n              icon={faStar}\n              color={ratingValue <= (hover || rating) ? \"blue\" : \"grey\"}\n              onMouseEnter={() => setHover(ratingValue)}\n              onMouseLeave={() => setHover(null)}\n              style={{ marginRight: 10 }}\n              spin\n            />\n          </label>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Rating;\n","import React from \"react\";\nimport RatingStar from \"./rating\";\nimport Styles from \"./rank.module.css\";\nconst Rank = ({ data }) => {\n  const { rank_wrapper, fieldset } = Styles;\n  return (\n    <div className={rank_wrapper}>\n      <fieldset className={fieldset}>\n        <h3>lets see your rating on {data}</h3>\n        <legend>rank countries</legend>\n\n        {data && <RatingStar />}\n\n        {/* https://www.npmjs.com/package/react-star-ratings */}\n      </fieldset>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport FormField from \"../component_Form_Field/form\";\nimport Styles from \"./section.module.css\";\nimport Ranked from \"../component_rank/Rank\";\nclass Section extends React.Component {\n  state = {\n    options: {\n      colors: [\"#fff\", \"#fff\", \"blue\"],\n      chart: {\n        id: \"covid_19_cases\",\n        foreColor: \"rgb(241, 237, 236)\",\n      },\n      zoom: {\n        enabled: true,\n      },\n      xaxis: {\n        categories: [],\n        show: true,\n      },\n      yaxis: {\n        showAlways: true,\n        labels: {\n          text: \"heading\",\n        },\n      },\n      fill: {\n        colors: [\"#F44336\", \"#E91E63\", \"#9C27B0\"],\n      },\n      dataLabels: {\n        enabled: true,\n        style: {\n          colors: [\"rgb(107, 24, 16)\"],\n        },\n      },\n      markers: {\n        colors: [\"#F44336\", \"#E91E63\", \"#9C27B0\"],\n      },\n      title: {\n        text: `Covid-19 Global Daily Summary`,\n        align: \"center\",\n        style: {\n          fontSize: \"16px\",\n        },\n      },\n    },\n    series: [],\n    countries: null,\n    data: \"\",\n    global: null,\n    type: \"area\",\n    globalTitle: \"\",\n  };\n\n  handleFormData = ({ target }) => {\n    this.setState({ data: target.value });\n  };\n\n  updateChart = () => {\n    const { data, countries, global } = this.state;\n    let randomType = [\"line\", \"area\"];\n    if (data) {\n      let newSeries = [];\n      let foundSlug = countries.filter(({ Slug }) => {\n        return Slug === data;\n      });\n      if (foundSlug) {\n        const [countryObject] = foundSlug;\n        for (let value in countryObject) {\n          if (Object.keys(global).includes(value))\n            newSeries.push(countryObject[value]);\n        }\n        let types = randomType[Math.floor(Math.random() * randomType.length)];\n        ApexCharts.exec(\"covid_19_cases\", \"updateSeries\", [\n          {\n            name: data,\n            data: newSeries,\n            type: types,\n          },\n        ]);\n        ApexCharts.exec(\"covid_19_cases\", \"updateOptions\", {\n          title: {\n            text: `Covid-19 ${data.toUpperCase()} Daily Summary`,\n          },\n        });\n      }\n    }\n  };\n  handleFocus = () => {\n    this.setState({ data: \"\" });\n  };\n\n  handleGlobalSummary = () => {\n    const { type, global } = this.state;\n\n    ApexCharts.exec(\"covid_19_cases\", \"updateSeries\", [\n      {\n        name: \"Global summary\",\n        data: Object.values(global),\n        type: type,\n      },\n    ]);\n\n    ApexCharts.exec(\"covid_19_cases\", \"updateOptions\", {\n      title: {\n        text: `Covid-19 GLOBAL Daily Summary`,\n      },\n    });\n    this.setState({\n      globalTitle: \"Global Summary\",\n      data: \"\",\n    });\n  };\n  fetchData = async () => {\n    let arr = [];\n    await axios\n      .get(\"https://api.covid19api.com/summary\")\n      .then((res) => {\n        const { Global, Countries } = res.data;\n        this.setState({ countries: Countries });\n        this.setState({ global: Global });\n\n        arr.push({\n          name: \"population\",\n          data: Object.values(Global),\n          type: \"area\",\n        });\n\n        this.setState({\n          options: {\n            ...this.state.options,\n            xaxis: {\n              ...this.state.options.xaxis,\n              categories: Object.keys(Global),\n            },\n          },\n          series: arr,\n          globalTitle: \"Global Summary\",\n        });\n        ApexCharts.exec(\"covid_19_cases\", \"updateSeries\", [\n          {\n            name: \"Global Summary\",\n          },\n        ]);\n      })\n      .catch((err) => console.log(\"err.respond\", err.response));\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    this.updateChart();\n  }\n\n  render() {\n    const { wrapper, formfield, chart, starRank } = Styles;\n    const { type, data, globalTitle, countries, options, series } = this.state;\n    return (\n      <div className={wrapper}>\n        <div className={formfield}>\n          <FormField\n            handleCountries={this.handleFormData}\n            data={data}\n            countries={countries}\n            reset={this.handleFocus}\n            handleGlobalSummary={this.handleGlobalSummary}\n          />\n        </div>\n        <div className={chart}>\n          <Chart\n            options={options}\n            series={series}\n            type={type}\n            width={\"230%\"}\n            height={320}\n            title={\n              data\n                ? `${data.substr(0, 1).toUpperCase()}${data.slice(1)} Summary`\n                : globalTitle\n            }\n          />\n        </div>\n        <div className={starRank}>\n          <Ranked data={data} />\n        </div>\n      </div>\n    );\n  }\n  // https://api.covid19api.com/total/country/south-africa/status/confirmed?from=2020-08-01T00:00:00Z&to=2020-08-14T00:00:00Z\n}\n\nexport default Section;\n","//static.dribbble.com/users/1863078/screenshots/7052720/downloads/edu_app.png\nimport React from \"react\";\nimport Header from \"../components/component_header/Header\";\nimport Section from \"../components/component_section/Section\";\n\nconst Landing_page = () => {\n  return (\n    <div>\n      <Header />\n      <Section />\n    </div>\n  );\n};\nexport default Landing_page;\n","import React from \"react\";\nimport \"./App.css\";\nimport LandingPage from \"./pages/landing_page\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={LandingPage} exact />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}